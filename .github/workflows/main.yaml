on: push

env:
  DENO_VERSION: 1.30.0
  IMAGE: ghcr.io/colpal/granfalloon
  TARGETS: |
    x86_64-unknown-linux-gnu
    x86_64-pc-windows-msvc
    x86_64-apple-darwin
    aarch64-apple-darwin

permissions:
  contents: write
  packages: write

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}

      - run: deno test --lock --allow-read --allow-env --allow-net
        env:
          GRANFALLOON_TOKEN: ${{ github.token }}

      - run: 'echo "$TARGETS"
              | xargs -i deno compile
                           --allow-read
                           --allow-net
                           --allow-env
                           --target="{}"
                           --output="dist/granfalloon-{}"
                           --lock
                           src/mod.js'

      - run: deno bundle --lock src/mod.js -- dist/granfalloon.js

      - if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: dist/*

      - if: startsWith(github.ref, 'refs/tags/v')
        run: |
          printf 'TAG=%s-deno%s-distroless' \
            "$(echo $GITHUB_REF | awk -F'/v' '{print $2}')" \
            "$DENO_VERSION" \
          >> $GITHUB_ENV

      - if: startsWith(github.ref, 'refs/tags/v')
        run: docker build --build-arg DENO_VERSION --tag "$IMAGE:$TAG" .

      - if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - if: startsWith(github.ref, 'refs/tags/v')
        run: docker push "$IMAGE:$TAG"
